1. chuoi p trong t
#include <iostream>
#include <bits/stdc++.h>

using namespace std;

bool indexOf(char *p, char *t){
    int m = strlen(p);
    int n = strlen(t) - m;

    for (int i=0; i<n+1; i++) {
        int j=0;
        while (j<m && t[j+i] == p[j]) {
            j++;
        }
        if (j==m) {
            return true;
        }
    }
    return false;
}

int main()
{
    char *t = "mot hai ba bon nam";
    char *p = "mot";
    if (indexOf(p, t)) cout<<"Co";
    else cout<<"Khong";

    return 0;
}

2. sinh ab
int *x, n;

void xuat(){
    for (int i=1; i<=n; i++) {
        if (x[i]==0) cout<<"a";
        else cout<<"b";
    }
    cout<<endl;
}

int Try(int k){
    for (int i=0; i<=1; i++) {
        x[k] = i;
        if ( k==n ) xuat();
        else Try(k+1);
    }
}

int main(){
    n = 3;
    x = new int[n+1];
    Try(0);
    return 0;
}

3. min max
void MaxMin(int a[],int l, int r,int &min, int &max) {
	int min1, min2, max1, max2;
	if (l == r) {
		max = min = a[l];
	}
	else {
		int mid = (l + r) / 2;
		min1 = l, max1 = mid;
		min2 = mid + 1, max2 = r;
		MaxMin(a, l, mid, min1, max1);
		MaxMin(a, mid + 1, r,min2,max2);

		if (min1 < min2) {
			min = min1;
		} else {
			min = min2;
		}

		if (max1 < max2) {
			max = max2;
		} else {
			max = max1;
		}
	}
}
int main() {
	int c[5] = {4, 5, 10 ,0 , 8};
	int min = c[0];
	int max = c[4];

	MaxMin(c, 0, 4, min, max);
	cout << max << " - " << min << endl;

	return 0;
}

4.thap ha noi
void chuyen(int n, char from, char to){
    cout<<"chuyen dia thu "<<n<<" tu cot "<<from<<" toi cot "<<to<<endl;
}

void thapHaNoi(int n, char a, char b, char c){
    if (n==1) chuyen(n, a, c);
    else {
        thapHaNoi(n-1, a, c, b);
        chuyen(n, a, c);
        thapHaNoi(n-1, b, a, c);
    }
}
int main()
{
    char a='A', b='B', c='C';
    int n = 3;
    thapHaNoi(n, a, b, c);

    return 0;
}

5. thuat toan Z
void Z_algo(const char *s,int *z){
    int n=strlen(s),l=0,r=0;

    for(int i=1; i<n; i++){
        if (i>r){
            l = r = i;
            while(r<n && s[r-l] == s[r]) {
               r++;
            }
            z[i]=r-l;r--;
        }
        else if (z[i-l]<r-i+1) {
            z[i]=z[i-l];
        }
        else {
            l = i;
            while(r<n && s[r-l]==s[r]) {
                r++;
            }
            z[i]=r-l;r--;
        }
    }
}

int main() {
    char *s="viet$viet nam o viet nam chu khong phải viet nam thi o mo";
    int n = strlen(s);
    int z[n];
    Z_algo(s,z);

    int dem = 0;
    for (int i=0; i<n; ++i){
        if (z[i]==4) {
             dem++;
        }
    }
    cout<<dem;

    return 0;
}

6. phan tich so nguyen duong
void xuLy(int n, int X[], int T[], int i){
    for (int j=X[i-1]; j<=(n-T[i-1]); j++) {
        X[i]= j;
        T[i]= T[i-1] + j;

        if (T[i]==n) {
            for (int t=1; t<=i; t++) {
                cout<<X[t]<<" ";
            }
            cout<<"\n";
        } else {
            xuLy(n, X, T, i+1);
        }
    }
}

int main(){
    int n=4;
    int X[n+1]; X[0] = 1;
    int T[n+1]; T[0] = 0;
    xuLy(n, X, T, 1);
    return 0;
}

7. lay 4 sinh vien tu 6 sinh v
int a[6];
void view_config(int k){
    for (int i=1; i<=k; i++) {
        if (a[i]==1) cout<<"1 ";
        else if (a[i]==2) cout<<"2 ";
        else if (a[i]==3) cout<<"3 ";
        else if (a[i]==4) cout<<"4 ";
        else if (a[i]==5) cout<<"5 ";
        else cout<<"6 ";
    }
    cout<<"\n";
}

void next_config(int k, int i) {
    a[i]+=1;
    i++;
    while (i<=k) {
        a[i] = a[i-1] + 1;
        i++;
    }
}

void config(int n, int k){
    int i;
    for (int i=1; i<=k; i++) a[i] = i;
    do {
        view_config(k);
        i = k;
        while (i>0 && a[i] == n-k+i) {
            i--;
        }
        if (i>0) next_config(k, i);
    } while (i>0);
}

int main(){
    int n = 5;
    config(n, 4);
    return 0;
}

8. xep 6 sinh vien vao ban tron
int *dd;
int *x;
int n;

void xuat(){
    for (int i=1; i<=n ; i++) {        if (x[i]==1) cout<<"a ";
        else if (x[i]==2) cout<<"b ";
        else cout<<"c ";
    }
    cout<<"\n";
}

void Try(int k){
    for (int i=1; i<=n; i++) {
        if (dd[i]==0) {
            x[k]=i;
            if (k==n) xuat();
            else {
                dd[i] = 1;
                Try(k+1);
                dd[i] = 0;
            }
        }
    }
}

int main(){
    n = 3;
    x = new int[n+1];
    dd = new int[n+1];

    for (int i=1; i<=n; i++) {
        dd[i] = 0;
    }
    Try(1);

    return 0;
}

9. binh nuoc
int binhNuoc(int *c, int m, int n, int *s) {
    for(int i=0;i<m;i++) {
        s[i]=0;
    }
    int i = m-1;
    int dem = 0;

    while (n>0 && i>=0) {
        if (n-c[i]>=0) {
            s[i]++;
            dem++;
            n=n-c[i];
            i--;
        }
        else break;
    }
    return dem;
}

int main() {
    int a[5] ={10, 20, 30, 1, 9};
    int s[5];
    int n = 10;
    int m = 5;

    cout<<"toi thieu: "<<binhNuoc(a,m,n,s)<<"\n\n";

    cout<<"result: "<<endl;
    for (int i=0; i<m; i++) {
        cout<<a[i]<<" : "<<s[i]<<endl;
    }
    return 0;
}

10. ch trong tr
int fisrt(char ch, int l, int r, string s){
    while(l<=r){
        int mid = (l + r) / 2;
        if(ch<=s[mid]) r = mid - 1;
        else l = mid + 1;
    }
    if(l>=s.length() || l < 0) return -1;
    else return l;
}
int last(char ch, int l, int r, string s){
    while(l<=r){
        int mid = (l + r) / 2;
        if(ch<s[mid]) r = mid - 1;
        else l = mid + 1;
    }
    if(r>=s.length() || r < 0) return -1;
    if(s[r] != ch) return -1;
    else return r;
}
int main()
{
    string s = "ahsfjhfacafg";
    char ch = 'a';
    sort(s.begin(),s.end());

    int firstIndex = fisrt(ch,0,s.length() - 1,s);
    int lastIndex = last(ch,0,s.length() - 1,s);

    if(lastIndex == -1){
        std::cout << 0 << std::endl;
    } else {
        cout<<lastIndex - firstIndex + 1;
    }
    return 0;
}

11. 

#include <iostream>
// xem so gia tri co the bo vao cai tui là max khong vuot qua n gia tri
using namespace std;

int F[100][100];
int w[6]= {5,12,2,1,1,4};
int v[6]={15,4,2,1,2,10};
int m,n;

void dp_algorithm()
{
    int temp;
    for(int j=0;j<=m;j++) F[0][j]=0;
    for(int i=1;i<=n;i++){
        for(int j=0;j<=m;j++){
            F[i][j]=F[i-1][j];
            temp = F[i-1][j-w[i]] + v[i];
            if(w[i]<=j && F[i][j]<temp)
                F[i][j]=temp;
        }
    }
}
void result()
{
    cout<<"Max value: "<<F[n][m]<<endl;
    int i=n,j=m;
    while(i!=0){
        if(F[i][j]!=F[i-1][j]){
            cout<<i<<" ";
            j=j-w[i];
        }
        i--;
    }
}
int main()
{
    n=5,m=15;
    dp_algorithm();
    result();
}


Câu 1: cho dãy số nguyên a và số nguyên t. Cho biết cần lấy ít nhất bao nhiêu số trong dãy a để được tổng lớn hơn 1
#include <iostream>
// xem so gia tri co the bo vao cai tui là max khong vuot qua n gia tri
using namespace std;

int C_a(int c[], long n, int m){
    int i = m - 1;
    int Count  = 0;
    while(n > 0 && i >= 0){
        if(n > c[i]){
            Count++;
        }
        n = n - c[i];
        i--;
    }
    return Count;
}
int main()
{
    int c[10] = {8, 5, 4, 3, 2}, n = 2;
    int dem = C_a(c, n, 5) +1 ;
    cout << dem;
    return 0;
}


